-- Create Orders table
CREATE TABLE dbo.Orders (
    OrderID INT PRIMARY KEY,
    CustomerID NVARCHAR(50),
    OrderDate DATETIME,
    UpdatedDate DATETIME,
    Amount FLOAT
);

-- Create Temp_Orders table
CREATE TABLE dbo.temp_Orders (
    OrderID INT ,
    CustomerID NVARCHAR(50),
    OrderDate DATETIME,
    UpdatedDate DATETIME,
    Amount FLOAT
);


CREATE OR ALTER PROCEDURE sp_upsert_orders
AS
BEGIN
    SET NOCOUNT ON;

    -- Use latest UpdatedDate per OrderID from temp_Orders
    WITH LatestTempOrders AS (
        SELECT *
        FROM (
            SELECT *,
                   ROW_NUMBER() OVER (PARTITION BY OrderID ORDER BY UpdatedDate DESC) AS rn
            FROM dbo.temp_Orders
        ) Ranked
        WHERE rn = 1
    )

    MERGE INTO dbo.Orders AS Target
    USING LatestTempOrders AS Source
        ON Target.OrderID = Source.OrderID

    -- Update existing records if the temp record is more recent
    WHEN MATCHED AND ISNULL(Source.UpdatedDate, '1900-01-01') > ISNULL(Target.UpdatedDate, '1900-01-01') THEN
        UPDATE SET
            Target.CustomerID  = Source.CustomerID,
            Target.OrderDate   = Source.OrderDate,
            Target.UpdatedDate = Source.UpdatedDate,
            Target.Amount      = Source.Amount

    -- Insert new records that don't exist in the target
    WHEN NOT MATCHED BY TARGET THEN
        INSERT (OrderID, CustomerID, OrderDate, UpdatedDate, Amount)
        VALUES (Source.OrderID, Source.CustomerID, Source.OrderDate, Source.UpdatedDate, Source.Amount);

END;

select * from dbo.Orders;

select * from dbo.temp_Orders;

